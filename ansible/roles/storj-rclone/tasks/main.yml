- name: Install rclone from curl
  shell:
    cmd: curl https://rclone.org/install.sh | bash
    creates: /usr/bin/rclone
    warn: false
- name: Install dependencies
  apt:
    pkg: [docker.io, python3-docker, unionfs-fuse]
- file:
    path: /root/.config/rclone
    state: directory
- name: Copy rclone.conf
  copy:
    src: rclone.secret.conf
    dest: /root/.config/rclone/rclone.conf
    mode: 0600
    force: yes
- name: Copy services
  copy:
    src: "{{ item }}"
    dest: /etc/systemd/system
    mode: 0644
  loop:
    - gsuite.service
  notify: Restart G-Suite service
- name: Ensure mount directories exist
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - /mnt/gsuite
- name: Ensure mounts are started
  systemd:
    daemon_reload: yes
    name: "{{ item }}.service"
    state: started
  loop:
    - gsuite
- name: Copy storj identity
  copy:
    src: secret/identity/{{ ansible_hostname }}/
    dest: /var/lib/storj-identity
    owner: root
    group: root
    directory_mode: 0700
- name: Create Storj folders
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - /var/lib/storj
    - /mnt/gsuite/Storj/{{ ansible_hostname }}/storage
- name: Check that the iptables file exists
  stat:
    path: /etc/iptables/rules.v4
  register: stat_result
- name: Open Storj firewall ports (Oracle VM)
  lineinfile:
    path: /etc/iptables/rules.v4
    regexp: '^{{ item }}'
    line: "{{ item }}"
    insertafter: '^-A INPUT'
    firstmatch: yes
    state: present
  when: stat_result.stat.exists
  loop:
    - -A INPUT -p tcp -m state --state NEW -m tcp --dport 14002 -j ACCEPT
    - -A INPUT -p tcp -m state --state NEW -m tcp --dport 28967 -j ACCEPT
- name: Start Storj docker container
  docker_container:
    timeout: 300
    name: storj
    image: storjlabs/storagenode:latest
    pull: yes # Always pull latest version
    command: [--storage2.database-dir, /storage-db, --storage2.max-concurrent-requests, '8']
    env:
      WALLET: "0xA0fd60A944c1f86D529EEbEf19b34ca61294Ffe5"
      EMAIL: kevin@kliu.io
      # TODO
      ADDRESS: "{{ ansible_hostname }}.storj.kliu.io:28967"
      STORAGE: 5TB
    network_mode: host
    restart_policy: unless-stopped
    mounts:
      - source: /var/lib/storj-identity
        target: /app/identity
        type: bind
      - source: /var/lib/storj
        target: /storage-db
        type: bind
      - source: /mnt/gsuite/Storj/{{ ansible_hostname }}/storage
        target: /app/config/storage
        type: bind