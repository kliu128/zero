apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: matrix-facebook
  name: matrix-facebook
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: matrix-facebook
  template:
    metadata:
      labels:
        app: matrix-facebook
    spec:
      containers:
        - name: facebook
          image: registry.potatofrom.space/kevin/matrix-puppet-facebook
          imagePullPolicy: Always
          readinessProbe:
            tcpSocket:
              port: 8090
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 8090
            initialDelaySeconds: 1200 # 20 min
            periodSeconds: 10
          ports:
            - containerPort: 8090
              name: facebook
          volumeMounts:
            - name: config
              subPath: facebook-registration.yaml
              mountPath: /usr/src/app/facebook-registration.yaml
            - name: config
              subPath: facebook-config.json
              mountPath: /usr/src/app/config.json
            - name: facebook-appstate
              subPath: appstate.json
              mountPath: /usr/src/app/appstate.json
      volumes:
        - name: config
          secret:
            secretName: matrix-config
        - name: facebook-appstate
          persistentVolumeClaim:
            claimName: matrix-facebook-appstate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    app: matrix-facebook
  name: matrix-facebook-appstate
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: matrix-facebook
spec:
  selector:
    app: matrix-facebook
  ports:
  - name: http
    targetPort: 8090
    port: 8090

---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: matrix-facebook-restart
rules:
- apiGroups:
  - extensions
  - apps
  resources:
  - deployments
  - replicasets
  verbs:
  - 'patch'
  - 'get'
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: matrix-facebook-restart
subjects:
- kind: ServiceAccount
  name: sa-matrix-facebook-restart
roleRef:
  kind: Role
  name: matrix-facebook-restart
  apiGroup: ""
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sa-matrix-facebook-restart
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: matrix-facebook-restart
spec:
  schedule: "* */7 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: sa-matrix-facebook-restart
          containers:
          - name: kubectl
            image: lachlanevenson/k8s-kubectl:latest
            command:
            - /bin/sh
            - -c
            - kubectl patch deployment matrix-facebook -p '{"spec":{"template":{"metadata":{"labels":{"restarted-by":"'${POD_NAME}'"}}}}}'
            env:
              - name: POD_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name
          restartPolicy: OnFailure