apiVersion: v1
kind: Service
metadata:
  name: matrix
spec:
  selector:
    app: matrix
  ports:
  - name: http
    targetPort: 8008
    port: 8008
  - name: https
    targetPort: 8448
    port: 8448
  - name: turn
    port: 3478
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: matrix
spec:
  selector:
    matchLabels:
      app: matrix
  template:
    metadata:
      labels:
        app: matrix
    spec:
      containers:
        # Main matrix server
        - name: synapse
          image: matrixdotorg/synapse:v0.33.1
          env:
            - name: SYNAPSE_CONFIG_PATH
              value: /config/homeserver.yaml
          ports:
            - containerPort: 8008
              name: http
            - containerPort: 8448
              name: https
          livenessProbe:
            httpGet:
              path: /_matrix/client/versions
              port: 8008
            initialDelaySeconds: 60
            periodSeconds: 60
            timeoutSeconds: 45
          resources:
            request:
              memory: 750Mi
              cpu: 500m
            limits:
              cpu: 4000m
          volumeMounts:
            - name: config
              subPath: homeserver.yaml
              mountPath: /config/homeserver.yaml
            - name: config
              subPath: discord-registration.yaml
              mountPath: /config/discord-registration.yaml
            - name: config
              subPath: telegram-registration.yaml
              mountPath: /config/telegram-registration.yaml
            - name: config
              subPath: potatofrom.space.log.config
              mountPath: /config/potatofrom.space.log.config
            - name: data
              mountPath: /data
        - name: db
          image: postgres:10-alpine
          ports:
            - containerPort: 5342
              name: postgres
          volumeMounts:
            - name: db
              mountPath: /var/lib/postgresql/data
        - name: discord
          image: pneumaticat/matrix-appservice-discord:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 9005
              name: discord
          volumeMounts:
            - name: config
              subPath: discord-registration.yaml
              mountPath: /data/discord-registration.yaml
            - name: config
              subPath: discord-config.yaml
              mountPath: /data/config.yaml
            - name: discord-data
              mountPath: /data
        - name: telegram
          image: tulir/mautrix-telegram
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: telegram
          volumeMounts:
            - name: config
              subPath: telegram-registration.yaml
              mountPath: /data/registration.yaml
              # Telegram config is in PVC
            - name: telegram-data
              mountPath: /data
      volumes:
        # Stores SSL keys, media_store
        - name: data
          persistentVolumeClaim:
            claimName: matrix-data
        - name: discord-data
          persistentVolumeClaim:
            claimName: matrix-discord-data
        - name: telegram-data
          persistentVolumeClaim:
            claimName: matrix-telegram-data
        - name: db
          persistentVolumeClaim:
            claimName: matrix-db
        - name: config
          secret:
            secretName: matrix-config
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    app: matrix
  name: matrix-data
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    app: matrix
  name: matrix-discord-data
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    app: matrix
  name: matrix-telegram-data
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    app: matrix
  name: matrix-db
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
status: {}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/tls-acme: 'true'
    nginx.ingress.kubernetes.io/proxy-body-size: 100m
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "14400"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "14400"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "14400"
  name: matrix
spec:
  tls:
    - secretName: matrix-tls
      hosts:
        - potatofrom.space
  rules:
  - host: potatofrom.space
    http:
      paths:
      - path: /_matrix
        backend:
          serviceName: matrix
          servicePort: 8008
