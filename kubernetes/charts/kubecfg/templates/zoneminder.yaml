apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: zoneminder
  name: zoneminder
spec:
  serviceName: zoneminder
  selector:
    matchLabels:
      app: zoneminder
  template:
    metadata:
      labels:
        app: zoneminder
    spec:
      nodeSelector:
        kubernetes.io/hostname: rem
      containers:
        - image: zoneminderhq/zoneminder:latest-ubuntu18.04
          imagePullPolicy: Always
          name: zoneminder
          livenessProbe:
            httpGet:
              path: /zm/
              port: 80
            initialDelaySeconds: 60
          volumeMounts:
            - mountPath: /var/cache/zoneminder/images
              subPath: images
              name: vids
            - mountPath: /var/cache/zoneminder/events
              subPath: events
              name: vids
            - mountPath: /var/lib/mysql
              name: data
            - mountPath: /dev/shm
              name: shm
            - mountPath: /etc/mysql/conf.d/checksums.cnf
              name: config
              subPath: checksums.cnf
      restartPolicy: Always
      volumes:
        - name: shm
          emptyDir:
            medium: Memory
        - name: config
          configMap:
            name: zoneminder-config
        - name: vids
          hostPath:
            path: /mnt/storage/Kevin/Computing/Data/Zoneminder
            type: Directory
        - name: data
          persistentVolumeClaim:
            claimName: zoneminder-data
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: zoneminder-config
  labels:
    app: zoneminder
data:
  checksums.cnf: |
    [mysqld]
    innodb_log_checksums = ON
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: zoneminder
  name: zoneminder-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: zoneminder
  name: zoneminder
spec:
  ports:
    - name: http
      port: 80
      targetPort: 80
  selector:
    app: zoneminder
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/tls-acme: "true"
  name: zoneminder
spec:
  tls:
    - secretName: zoneminder-tls
      hosts:
        - zm.kliu.io
  rules:
    - host: zm.kliu.io
      http:
        paths:
          - path: /
            backend:
              serviceName: zoneminder
              servicePort: http
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: zoneminder
spec:
  podSelector:
    matchLabels:
      app: zoneminder
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # nginx-ingress only
  - from:
    - podSelector:
        matchLabels:
          app: nginx-ingress
    ports:
    - protocol: TCP
      port: 80
  egress:
  # Allow egress to cameras
  - to:
    - ipBlock:
        cidr: 192.168.1.7/32
    ports:
    - protocol: TCP
      port: 8081